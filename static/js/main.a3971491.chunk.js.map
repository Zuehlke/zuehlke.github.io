{"version":3,"sources":["components/Hero/Hero.tsx","components/ZueBanner/ZueBanner.tsx","context/overlayState.ts","components/Navigation/Navigation.tsx","assets/images/logo/logo-zuehlke-big.png","components/Footer/Footer.tsx","components/SideNavigation/SidebarNavigation.tsx","components/RepoTile/RepoTile.tsx","components/TileGrid/TileGrid.tsx","pages/Contributions/Contributions.tsx","components/PersonTile/PersonTile.tsx","pages/People/People.tsx","App.tsx","reportWebVitals.ts","common/faLibrary.ts","index.tsx"],"names":["Hero","className","ZueBanner","OverlayStateContext","createContext","overlayState","sidebarNavVisible","setOverlayState","console","error","Navigation","props","useContext","handleNavigate","onNavigateCallback","metaLinks","map","link","href","target","rel","display","metaNavLink","routes","route","onClick","tabIndex","to","routeLink","aria-label","icon","Footer","src","logo","alt","text","createCorpPageLink","iconName","label","createContactLink","SidebarNavigation","handleLinkClicked","mainNav","RepoTile","repo","html_url","name","description","TileGrid","React","Children","children","child","idx","tile","Contributions","sortedRepos","repos","sort","a","b","stargazers_count","PersonTile","person","login","avatar_url","bio","People","people","App","pageContentRef","useRef","useState","component","contributions","defaultRoute","scrollToPageContent","window","scrollTo","element","current","header","document","querySelector","pageY","getBoundingClientRect","y","paddingTop","height","Provider","value","ref","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fab","faBars","faTimes","initFaLibrary","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3971491.chunk.js","sourcesContent":["import './Hero.scss';\nimport React from 'react';\n\nconst Hero = () => {\n  return (\n    <div className=\"Hero\">\n      <article className=\"inner\">\n        Producing cool, innovative solutions and solving tough technical problems is what Zühlke lives for and has been\n        successful at over several decades. Knowledge sharing is something we cultivate and we strongly believe in the\n        power of the Open Source Software communities.\n      </article>\n    </div>\n  );\n};\n\nexport default Hero;\n","import './ZueBanner.scss';\nimport React from 'react';\n\nconst ZueBanner = () => {\n  return (\n    <div className=\"ZueBanner\">\n      <div className=\"content\">\n        <div className=\"text\">\n          Zühlke is a <strong>service provider for innovation projects.</strong> By combining\n          both <strong>business and technology</strong> expertise, we create solutions that satisfy our customers. We\n          develop <strong>financially successful products, services and business models</strong> for today’s digital\n          world – from coming up with the initial idea through to the implementation and operation.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ZueBanner;\n","import {createContext} from \"react\";\nimport {Consumer} from \"../common/types\";\n\nexport type OverlayState = {\n  sidebarNavVisible: boolean;\n};\n\ntype OverlayStateContextType = {\n  overlayState: OverlayState,\n  setOverlayState: Consumer<OverlayState>\n}\n\nconst OverlayStateContext = createContext<OverlayStateContextType>({\n  overlayState: {\n    sidebarNavVisible: false\n  },\n  setOverlayState: () => console.error(\"OverlayStateContext not initialized.\"),\n});\n\nexport default OverlayStateContext;\n","import './Navigation.scss';\nimport React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {MetaLinkSpec, RouteSpec, Runnable} from \"../../common/types\";\nimport OverlayStateContext from \"../../context/overlayState\";\n\ntype Props = {\n  routes: RouteSpec[];\n  metaLinks: MetaLinkSpec[],\n  onNavigateCallback: Runnable,\n}\n\nconst Navigation = (props: Props) => {\n\n  // Global state\n  const {overlayState, setOverlayState} = useContext(OverlayStateContext);\n\n  const metaNavLink = (link: MetaLinkSpec) => {\n    return (\n      <div key={link.href} className=\"link-container\">\n        <a href={link.href} target=\"_blank\" rel=\"noreferrer\">{link.display}</a>\n      </div>\n    );\n  }\n\n  const routeLink = (route: RouteSpec) => {\n    return (\n      <div key={route.to} className=\"link-container\" onClick={handleNavigate} tabIndex={0}>\n        <Link to={route.to}>{route.display}</Link>\n      </div>\n    );\n  }\n\n  const handleHamburgerClick = () => {\n    setOverlayState({\n      ...overlayState,\n      sidebarNavVisible: !overlayState.sidebarNavVisible\n    })\n  }\n\n  const handleNavigate = () => {\n    props.onNavigateCallback();\n  };\n\n  return (\n    <header className={`Navigation ${overlayState.sidebarNavVisible ? \"opaque\" : \"\"}`}>\n      <div className=\"content\">\n        <div className=\"branding-container\">\n          <div className=\"branding\"/>\n        </div>\n        <div className=\"nav-links\">\n          <div className=\"meta-nav\">\n            {props.metaLinks.map((link: MetaLinkSpec) => metaNavLink(link))}\n          </div>\n          <nav className=\"main-nav\">\n            {props.routes.map((route: RouteSpec) => routeLink(route))}\n          </nav>\n        </div>\n        <div className=\"hamburger-container\">\n          <button onClick={handleHamburgerClick} className=\"hamburger\" aria-label=\"Open navigation\">\n            {overlayState.sidebarNavVisible ?\n              <FontAwesomeIcon icon={[\"fas\", \"times\"]}/> :\n              <FontAwesomeIcon icon={[\"fas\", \"bars\"]}/>}\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/logo-zuehlke-big.558e71de.png\";","import './Footer.scss';\nimport React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport logo from '../../assets/images/logo/logo-zuehlke-big.png'\nimport {IconName} from '@fortawesome/fontawesome-svg-core';\n\nconst Footer = () => {\n\n  const corpPageLinks = [\n    {href: \"https://www.zuehlke.com/en/our-expertise\", text: \"Our Expertise\"},\n    {href: \"https://www.zuehlke.com/en/our-projects\", text: \"Our Projects\"},\n    {href: \"https://www.zuehlke.com/en/insights\", text: \"Our Insights\"},\n    {href: \"https://www.zuehlke.com/en/about-us\", text: \"About us\"},\n    {href: \"https://www.zuehlke.com/en/careers\", text: \"Careers\"},\n    {href: \"https://www.zuehlke.com/en/legal-notice\", text: \"Legal\"},\n    {href: \"https://www.zuehlke.com/en/privacy-policy\", text: \"Terms of Use & Data Privacy\"}\n  ] as { href: string, text: string }[];\n\n  const contactLinks = [\n    {href: \"https://www.linkedin.com/company/zuehlkegroup/\", iconName: \"linkedin\", label: \"LinkedIn\"},\n    {href: \"https://www.facebook.com/zuehlke.group\", iconName: \"facebook-square\", label: \"Facebook\"},\n    {href: \"https://twitter.com/zuehlke_group\", iconName: \"twitter-square\", label: \"Twitter\"},\n    {href: \"https://github.com/Zuehlke\", iconName: \"github\", label: \"GitHub\"},\n    {href: \"https://www.instagram.com/zuehlkegroup/?hl=en\", iconName: \"instagram\", label: \"Instagram\"},\n    {href: \"https://www.youtube.com/channel/UCDglr0_rdf7cIakhluxAeBA\", iconName: \"youtube\", label: \"YouTube\"}\n  ] as { href: string, iconName: IconName, label: string }[];\n\n  const createCorpPageLink = (link: { href: string, text: string }) => {\n    return (\n      <li key={link.href}>\n        <a key={link.href} href={link.href} target=\"_blank\" rel=\"noreferrer\">\n          {link.text}\n        </a>\n      </li>\n    );\n  };\n\n  const createContactLink = (link: { href: string, iconName: IconName, label: string }) => {\n    return (\n      <div key={link.href} className=\"cell\">\n        <a href={link.href} target=\"_blank\" rel=\"noreferrer\" aria-label={`Zühlke ${link.label}`}>\n          <FontAwesomeIcon icon={[\"fab\", link.iconName]}/>\n        </a>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Footer\">\n      <div className=\"content\">\n        <div className=\"logo\">\n          <a href=\"https://www.zuehlke.com/en\" target=\"_blank\" rel=\"noreferrer\">\n            <img src={logo} alt=\"Zuehlke logo\"/>\n          </a>\n        </div>\n\n        <div className=\"links-container\">\n          <ul className=\"links-list\">\n            {corpPageLinks.map((link) => createCorpPageLink(link))}\n          </ul>\n        </div>\n\n        <div className=\"contact-block\">\n          <div className=\"label\">Stay in touch</div>\n          <div className=\"contact-links-container\">\n            {contactLinks.map((link) => createContactLink(link))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import './SidebarNavigation.scss';\nimport React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {MetaLinkSpec, RouteSpec, Runnable} from \"../../common/types\";\nimport OverlayStateContext from \"../../context/overlayState\";\n\ntype Props = {\n  routes: RouteSpec[];\n  metaLinks: MetaLinkSpec[];\n  onNavigateCallback: Runnable;\n}\n\nconst SidebarNavigation = (props: Props) => {\n\n  const {overlayState, setOverlayState} = useContext(OverlayStateContext);\n\n  const routeLink = (route: RouteSpec) => {\n    return (\n      <div key={route.to} className=\"link-container\" onClick={() => handleLinkClicked(true)}>\n        <Link to={route.to}>{route.display}</Link>\n      </div>\n    );\n  }\n\n  const metaNavLink = (link: MetaLinkSpec) => {\n    return (\n      <div key={link.href} className=\"link-container\" onClick={() => handleLinkClicked(false)}>\n        <a href={link.href} target=\"_blank\" rel=\"noreferrer\">{link.display}</a>\n      </div>\n    );\n  }\n\n  // Custom code in addition to route change.\n  const handleLinkClicked = (mainNav: boolean) => {\n    setOverlayState({\n      ...overlayState,\n      sidebarNavVisible: false\n    })\n    if (mainNav) {\n      props.onNavigateCallback();\n    }\n  };\n\n  return (\n    <div className={`SidebarNavigation ${overlayState.sidebarNavVisible ? \"visible\" : \"\"}`}>\n      <div className=\"content\">\n        <div className=\"nav-links\">\n          <nav className=\"main-nav\">\n            {props.routes.map((route: RouteSpec) => routeLink(route))}\n          </nav>\n          <div className=\"meta-nav\">\n            {props.metaLinks.map((link: MetaLinkSpec) => metaNavLink(link))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarNavigation;\n","import './RepoTile.scss';\nimport React from 'react';\nimport {RepoModel} from \"../../common/model\";\n\ntype Props = {\n  repo: RepoModel\n}\n\nconst RepoTile = (props: Props) => {\n  return (\n    <div className=\"RepoTile\">\n      <a href={props.repo.html_url}\n         target=\"_blank\" rel=\"noreferrer\"\n         className=\"content-link\"\n         aria-label={`${props.repo.name} repository on GitHub`}>\n        <article className=\"repo-article\">\n          <h2 className=\"repo-name\">{props.repo.name}</h2>\n          <p>{props.repo.description}</p>\n        </article>\n      </a>\n    </div>\n  );\n};\n\nexport default RepoTile;\n","import './TileGrid.scss';\nimport React, {ReactChild} from 'react';\n\ntype Props = {\n  children: ReactChild[]\n}\n\nconst TileGrid = (props: Props) => {\n\n  const tile = (child: ReactChild, idx: number) => {\n\n    return (\n      <div key={idx} className=\"grid-cell\">\n        {child}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"TileGrid\">\n      <div className=\"grid\">\n        {React.Children.map(props.children, (child: ReactChild, idx: number) => tile(child, idx))}\n      </div>\n    </div>\n  );\n};\n\nexport default TileGrid;\n","import './Contributions.scss';\nimport React from 'react';\nimport RepoTile from \"../../components/RepoTile/RepoTile\";\nimport TileGrid from \"../../components/TileGrid/TileGrid\";\nimport {RepoModel} from \"../../common/model\";\n\ntype Props = {\n  repos: RepoModel[]\n}\n\nconst Contributions = (props: Props) => {\n\n  const sortedRepos = props.repos.sort(\n    (a: RepoModel, b: RepoModel) => b.stargazers_count - a.stargazers_count);\n\n  return (\n    <div className=\"Contributions\">\n      <div className=\"container\">\n        <h1 className=\"title\">Contributions</h1>\n        <TileGrid>\n          {sortedRepos.map((repo: RepoModel) => <RepoTile key={repo.html_url} repo={repo}/>)}\n        </TileGrid>\n      </div>\n    </div>\n  );\n};\n\nexport default Contributions;\n","import './PersonTile.scss';\nimport React from 'react';\nimport {PersonModel} from \"../../common/model\";\n\ntype Props = {\n  person: PersonModel;\n}\n\nconst PersonTile = (props: Props) => {\n  return (\n    <div className=\"PersonTile\">\n      <a href={props.person.html_url} target=\"_blank\" rel=\"noreferrer\"\n         aria-label={`GitHub profile ${props.person.login}`}>\n        <article className=\"person-article\">\n          <div className=\"profile-container\">\n            <img src={props.person.avatar_url} className=\"avatar\" alt={`Avatar ${props.person.login}`}/>\n            <h2 className=\"github-login profile-text\">{props.person.login}</h2>\n            <h3 className=\"full-name text\">{props.person.name}</h3>\n          </div>\n          <div className=\"description-container\">\n            <p className=\"description\">{props.person.bio}</p>\n          </div>\n        </article>\n      </a>\n    </div>\n  );\n};\n\nexport default PersonTile;\n","import './People.scss';\nimport React from 'react';\nimport TileGrid from \"../../components/TileGrid/TileGrid\";\nimport {PersonModel} from \"../../common/model\";\nimport PersonTile from \"../../components/PersonTile/PersonTile\";\n\ntype Props = {\n  people: PersonModel[]\n}\n\nconst People = (props: Props) => {\n  return (\n    <div className=\"People\">\n      <div className=\"Contributions\">\n        <div className=\"container\">\n          <h1 className=\"title\">People</h1>\n          <TileGrid>\n            {props.people.map((person: PersonModel) => <PersonTile key={person.html_url} person={person}/>)}\n          </TileGrid>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default People;\n","import React, {useRef, useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport Hero from \"./components/Hero/Hero\";\nimport ZueBanner from \"./components/ZueBanner/ZueBanner\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Footer from \"./components/Footer/Footer\";\nimport contributions from \"./data/contributions.json\";\nimport people from \"./data/people.json\";\n\nimport SidebarNavigation from \"./components/SideNavigation/SidebarNavigation\";\nimport {MetaLinkSpec, RouteSpec} from \"./common/types\";\nimport OverlayStateContext, {OverlayState} from \"./context/overlayState\";\nimport Contributions from \"./pages/Contributions/Contributions\";\nimport People from \"./pages/People/People\";\n\nfunction App() {\n\n  const pageContentRef = useRef<HTMLDivElement>(null);\n\n  // Set up state for overlay context\n  const [overlayState, setOverlayState] = useState<OverlayState>({\n    sidebarNavVisible: false\n  });\n\n  const routes = [\n    {\n      to: \"/contributions\",\n      component: <Contributions repos={contributions}/>,\n      display: \"Contributions\"\n    },\n    {\n      to: \"/people\",\n      component: <People people={people}/>,\n      display: \"People\"\n    },\n  ] as RouteSpec[];\n\n  const defaultRoute = routes[0];\n\n  const metaLinks = [\n    {href: \"https://www.zuehlke.com\", display: \"Zühlke Website\"},\n    {href: \"https://www.zuehlke.com/careers\", display: \"Careers\"},\n    {href: \"https://www.zuehlke.com/insights\", display: \"Insights\"}\n  ] as MetaLinkSpec[]\n\n  const scrollToPageContent = () => {\n    // Reset scroll to 0.\n    window.scrollTo(0, 0);\n\n    // If header or page element doesn't exist, abort here.\n    const element = pageContentRef.current;\n    const header = document.querySelector(\"header\");\n    if (!(element && header)) {\n      return;\n    }\n\n    // Find y position of page content and height of header, scroll to\n    // computed position.\n    const pageY = element.getBoundingClientRect().y;\n    const paddingTop: number = header.getBoundingClientRect().height;\n    window.scrollTo(0, pageY - paddingTop);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <OverlayStateContext.Provider value={{overlayState, setOverlayState}}>\n          <Navigation\n            routes={routes}\n            metaLinks={metaLinks}\n            onNavigateCallback={scrollToPageContent}/>\n          <SidebarNavigation\n            routes={routes}\n            metaLinks={metaLinks}\n            onNavigateCallback={scrollToPageContent}/>\n        </OverlayStateContext.Provider>\n\n        { /* Content, blurred out when nav is open. */}\n        <div className={`blurable ${overlayState.sidebarNavVisible ? \"blur\": \"\"}`}>\n          <Hero/>\n          { /* Main routable page content */}\n          <div ref={pageContentRef}>\n            <Switch>\n              {routes.map((route) => (\n                <Route key={route.display} path={route.to} exact>\n                  {route.component}\n                </Route>\n              ))}\n              <Route path=\"/\" exact>\n                {defaultRoute.component}\n              </Route>\n            </Switch>\n          </div>\n          <ZueBanner/>\n          <Footer/>\n        </div>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {fab} from \"@fortawesome/free-brands-svg-icons\";\nimport {faBars, faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst initFaLibrary = () => {\n  library.add(fab, faBars, faTimes);\n};\n\nexport default initFaLibrary;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport initFaLibrary from './common/faLibrary';\n\n// Font Awesome library\ninitFaLibrary();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}